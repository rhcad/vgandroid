/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package rhcad.touchvg.core;

public final class GiHandleTypes {
  public final static GiHandleTypes kGiHandleVertex = new GiHandleTypes("kGiHandleVertex");
  public final static GiHandleTypes kGiHandleHotVertex = new GiHandleTypes("kGiHandleHotVertex");
  public final static GiHandleTypes kGiHandleRotate = new GiHandleTypes("kGiHandleRotate");
  public final static GiHandleTypes kGiHandleLock = new GiHandleTypes("kGiHandleLock");
  public final static GiHandleTypes kGiHandleUnlock = new GiHandleTypes("kGiHandleUnlock");
  public final static GiHandleTypes kGiHandleCancel = new GiHandleTypes("kGiHandleCancel");
  public final static GiHandleTypes kGiHandleAccept = new GiHandleTypes("kGiHandleAccept");
  public final static GiHandleTypes kGiHandleNode = new GiHandleTypes("kGiHandleNode");
  public final static GiHandleTypes kGiHandleCenter = new GiHandleTypes("kGiHandleCenter");
  public final static GiHandleTypes kGiHandleMidPoint = new GiHandleTypes("kGiHandleMidPoint");
  public final static GiHandleTypes kGiHandleQuadrant = new GiHandleTypes("kGiHandleQuadrant");
  public final static GiHandleTypes kGiHandleTangent = new GiHandleTypes("kGiHandleTangent");
  public final static GiHandleTypes kGiHandleIntersect = new GiHandleTypes("kGiHandleIntersect");
  public final static GiHandleTypes kGiHandleParallel = new GiHandleTypes("kGiHandleParallel");
  public final static GiHandleTypes kGiHandleNear = new GiHandleTypes("kGiHandleNear");
  public final static GiHandleTypes kGiHandlePivot = new GiHandleTypes("kGiHandlePivot");
  public final static GiHandleTypes kGiHandleOverturn = new GiHandleTypes("kGiHandleOverturn");
  public final static GiHandleTypes kGiHandleCustom = new GiHandleTypes("kGiHandleCustom", 20);

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static GiHandleTypes swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + GiHandleTypes.class + " with value " + swigValue);
  }

  private GiHandleTypes(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private GiHandleTypes(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private GiHandleTypes(String swigName, GiHandleTypes swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static GiHandleTypes[] swigValues = { kGiHandleVertex, kGiHandleHotVertex, kGiHandleRotate, kGiHandleLock, kGiHandleUnlock, kGiHandleCancel, kGiHandleAccept, kGiHandleNode, kGiHandleCenter, kGiHandleMidPoint, kGiHandleQuadrant, kGiHandleTangent, kGiHandleIntersect, kGiHandleParallel, kGiHandleNear, kGiHandlePivot, kGiHandleOverturn, kGiHandleCustom };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

