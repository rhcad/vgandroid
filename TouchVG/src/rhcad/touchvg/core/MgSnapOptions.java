/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package rhcad.touchvg.core;

public final class MgSnapOptions {
  public final static MgSnapOptions kMgOptionSnapGrid = new MgSnapOptions("kMgOptionSnapGrid", 1 << 1);
  public final static MgSnapOptions kMgOptionStartMustVertex = new MgSnapOptions("kMgOptionStartMustVertex", 1 << 2);
  public final static MgSnapOptions kMgOptionSnapVertex = new MgSnapOptions("kMgOptionSnapVertex", 1 << 3);
  public final static MgSnapOptions kMgOptionSnapCenter = new MgSnapOptions("kMgOptionSnapCenter", 1 << 4);
  public final static MgSnapOptions kMgOptionSnapMidPoint = new MgSnapOptions("kMgOptionSnapMidPoint", 1 << 5);
  public final static MgSnapOptions kMgOptionSnapQuadrant = new MgSnapOptions("kMgOptionSnapQuadrant", 1 << 6);
  public final static MgSnapOptions kMgOptionSnapCross = new MgSnapOptions("kMgOptionSnapCross", 1 << 7);
  public final static MgSnapOptions kMgOptionSnapPerp = new MgSnapOptions("kMgOptionSnapPerp", 1 << 8);
  public final static MgSnapOptions kMgOptionSnapPerpOut = new MgSnapOptions("kMgOptionSnapPerpOut", 1 << 9);
  public final static MgSnapOptions kMgOptionSnapTangent = new MgSnapOptions("kMgOptionSnapTangent", 1 << 10);
  public final static MgSnapOptions kMgOptionSnapNear = new MgSnapOptions("kMgOptionSnapNear", 1 << 11);
  public final static MgSnapOptions kMgOptionSnapExtend = new MgSnapOptions("kMgOptionSnapExtend", 1 << 12);
  public final static MgSnapOptions kMgOptionSnapParallel = new MgSnapOptions("kMgOptionSnapParallel", 1 << 13);

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static MgSnapOptions swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + MgSnapOptions.class + " with value " + swigValue);
  }

  private MgSnapOptions(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private MgSnapOptions(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private MgSnapOptions(String swigName, MgSnapOptions swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static MgSnapOptions[] swigValues = { kMgOptionSnapGrid, kMgOptionStartMustVertex, kMgOptionSnapVertex, kMgOptionSnapCenter, kMgOptionSnapMidPoint, kMgOptionSnapQuadrant, kMgOptionSnapCross, kMgOptionSnapPerp, kMgOptionSnapPerpOut, kMgOptionSnapTangent, kMgOptionSnapNear, kMgOptionSnapExtend, kMgOptionSnapParallel };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

