/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package rhcad.touchvg.core;

public class MgCmdArcCSE extends MgCmdArc3P {
  private transient long swigCPtr;

  protected MgCmdArcCSE(long cPtr, boolean cMemoryOwn) {
    super(touchvgJNI.MgCmdArcCSE_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MgCmdArcCSE obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        touchvgJNI.delete_MgCmdArcCSE(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public MgCmdArcCSE(String name) {
    this(touchvgJNI.new_MgCmdArcCSE__SWIG_0(name), true);
  }

  public MgCmdArcCSE() {
    this(touchvgJNI.new_MgCmdArcCSE__SWIG_1(), true);
  }

  public void release() {
    touchvgJNI.MgCmdArcCSE_release(swigCPtr, this);
  }

  public boolean draw(MgMotion sender, GiGraphics gs) {
    return touchvgJNI.MgCmdArcCSE_draw(swigCPtr, this, MgMotion.getCPtr(sender), sender, GiGraphics.getCPtr(gs), gs);
  }

}
